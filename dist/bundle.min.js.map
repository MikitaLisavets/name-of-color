{"version":3,"sources":["webpack:///bundle.min.js","webpack:///webpack/bootstrap 862ffd6d8d7c7bac684d","webpack:///./app/app.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","App","this","name","document","getElementById","input","preview","state","prototype","init","addEventListener","onKeyUp","bind","event","_","value","target","toUpperCase","replace","indexOf","tmp","split","length","r","g","b","parseInt","style","background","innerHTML","getName","nameOfColor","red","green","blue","max","Math","hash","MD5","toString","slice","string","RotateLeft","lValue","iShiftBits","AddUnsigned","lX","lY","lX4","lY4","lX8","lY8","lResult","F","x","y","z","G","H","I","FF","a","d","s","ac","GG","HH","II","ConvertToWordArray","lWordCount","lMessageLength","lNumberOfWords_temp1","lNumberOfWords_temp2","lNumberOfWords","lWordArray","Array","lBytePosition","lByteCount","charCodeAt","WordToHex","lByte","lCount","WordToHexValue","WordToHexValue_temp","substr","Utf8Encode","utftext","n","String","fromCharCode","k","AA","BB","CC","DD","S11","S12","S13","S14","S21","S22","S23","S24","S31","S32","S33","S34","S41","S42","S43","S44","temp","toLowerCase","app"],"mappings":"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","file":"bundle.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\tvar App = (function () {\n\t    function App() {\n\t        this.name = document.getElementById('name');\n\t        this.input = document.getElementById('input');\n\t        this.preview = document.getElementById('preview');\n\t        this.state = {};\n\t    }\n\t    App.prototype.init = function () {\n\t        this.input.addEventListener('keyup', this.onKeyUp.bind(this, event));\n\t    };\n\t    App.prototype.onKeyUp = function (_, event) {\n\t        var value = event.target.value\n\t            .toUpperCase()\n\t            .replace(/#|RGB|\\(|\\)|\\s|;/g, '');\n\t        if (value.indexOf(',') > 0) {\n\t            var tmp = value.split(',');\n\t            if (tmp.length === 3) {\n\t                this.state.r = tmp[0];\n\t                this.state.g = tmp[1];\n\t                this.state.b = tmp[2];\n\t            }\n\t        }\n\t        else if (value.length === 3) {\n\t            this.state.r = parseInt(value[0] + value[0], 16);\n\t            this.state.g = parseInt(value[1] + value[1], 16);\n\t            this.state.b = parseInt(value[2] + value[2], 16);\n\t        }\n\t        else if (value.length === 6) {\n\t            this.state.r = parseInt(value[0] + value[1], 16);\n\t            this.state.g = parseInt(value[2] + value[3], 16);\n\t            this.state.b = parseInt(value[4] + value[5], 16);\n\t        }\n\t        else {\n\t            this.preview.style.background = '';\n\t            this.name.innerHTML = '';\n\t            return;\n\t        }\n\t        this.getName();\n\t    };\n\t    App.prototype.getName = function () {\n\t        var nameOfColor = '', red = +this.state.r, green = +this.state.g, blue = +this.state.b, max = Math.max(red, green, blue), hash = this.MD5('' + red.toString(16) + green.toString(16) + blue.toString(16)).slice(0, 7);\n\t        hash = hash.replace(/0/g, 'o')\n\t            .replace(/1/g, 'i')\n\t            .replace(/2/g, 'n')\n\t            .replace(/3/g, 'a')\n\t            .replace(/4/g, 'h')\n\t            .replace(/5/g, 's')\n\t            .replace(/6/g, 'y')\n\t            .replace(/7/g, 'l')\n\t            .replace(/8/g, 'u')\n\t            .replace(/9/g, 'g');\n\t        if (max === red && max === green && max === blue) {\n\t            if (max === 255) {\n\t                nameOfColor = 'white';\n\t            }\n\t            else if (max === 0) {\n\t                nameOfColor = 'black';\n\t            }\n\t            else {\n\t                nameOfColor = 'grey';\n\t            }\n\t        }\n\t        else if (max === red && max === green) {\n\t            nameOfColor = 'yellow';\n\t        }\n\t        else if (max === red && max === blue) {\n\t            nameOfColor = 'magenta';\n\t        }\n\t        else if (max === green && max === blue) {\n\t            nameOfColor = 'cyan';\n\t        }\n\t        else if (max === red) {\n\t            nameOfColor = 'red';\n\t        }\n\t        else if (max === green) {\n\t            nameOfColor = 'green';\n\t        }\n\t        else if (max === blue) {\n\t            nameOfColor = 'blue';\n\t        }\n\t        if (!nameOfColor.length)\n\t            return;\n\t        this.name.innerHTML = nameOfColor + '_' + hash;\n\t        this.preview.style.background = 'rgb(' + red + ',' + green + ',' + blue + ')';\n\t    };\n\t    App.prototype.MD5 = function (string) {\n\t        function RotateLeft(lValue, iShiftBits) {\n\t            return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));\n\t        }\n\t        function AddUnsigned(lX, lY) {\n\t            var lX4, lY4, lX8, lY8, lResult;\n\t            lX8 = (lX & 0x80000000);\n\t            lY8 = (lY & 0x80000000);\n\t            lX4 = (lX & 0x40000000);\n\t            lY4 = (lY & 0x40000000);\n\t            lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);\n\t            if (lX4 & lY4) {\n\t                return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\n\t            }\n\t            if (lX4 | lY4) {\n\t                if (lResult & 0x40000000) {\n\t                    return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\n\t                }\n\t                else {\n\t                    return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\n\t                }\n\t            }\n\t            else {\n\t                return (lResult ^ lX8 ^ lY8);\n\t            }\n\t        }\n\t        function F(x, y, z) { return (x & y) | ((~x) & z); }\n\t        function G(x, y, z) { return (x & z) | (y & (~z)); }\n\t        function H(x, y, z) { return (x ^ y ^ z); }\n\t        function I(x, y, z) { return (y ^ (x | (~z))); }\n\t        function FF(a, b, c, d, x, s, ac) {\n\t            a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));\n\t            return AddUnsigned(RotateLeft(a, s), b);\n\t        }\n\t        ;\n\t        function GG(a, b, c, d, x, s, ac) {\n\t            a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));\n\t            return AddUnsigned(RotateLeft(a, s), b);\n\t        }\n\t        ;\n\t        function HH(a, b, c, d, x, s, ac) {\n\t            a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));\n\t            return AddUnsigned(RotateLeft(a, s), b);\n\t        }\n\t        ;\n\t        function II(a, b, c, d, x, s, ac) {\n\t            a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));\n\t            return AddUnsigned(RotateLeft(a, s), b);\n\t        }\n\t        ;\n\t        function ConvertToWordArray(string) {\n\t            var lWordCount;\n\t            var lMessageLength = string.length;\n\t            var lNumberOfWords_temp1 = lMessageLength + 8;\n\t            var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - (lNumberOfWords_temp1 % 64)) / 64;\n\t            var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;\n\t            var lWordArray = Array(lNumberOfWords - 1);\n\t            var lBytePosition = 0;\n\t            var lByteCount = 0;\n\t            while (lByteCount < lMessageLength) {\n\t                lWordCount = (lByteCount - (lByteCount % 4)) / 4;\n\t                lBytePosition = (lByteCount % 4) * 8;\n\t                lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount) << lBytePosition));\n\t                lByteCount++;\n\t            }\n\t            lWordCount = (lByteCount - (lByteCount % 4)) / 4;\n\t            lBytePosition = (lByteCount % 4) * 8;\n\t            lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition);\n\t            lWordArray[lNumberOfWords - 2] = lMessageLength << 3;\n\t            lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;\n\t            return lWordArray;\n\t        }\n\t        ;\n\t        function WordToHex(lValue) {\n\t            var WordToHexValue = \"\", WordToHexValue_temp = \"\", lByte, lCount;\n\t            for (lCount = 0; lCount <= 3; lCount++) {\n\t                lByte = (lValue >>> (lCount * 8)) & 255;\n\t                WordToHexValue_temp = \"0\" + lByte.toString(16);\n\t                WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length - 2, 2);\n\t            }\n\t            return WordToHexValue;\n\t        }\n\t        ;\n\t        function Utf8Encode(string) {\n\t            string = string.replace(/\\r\\n/g, \"\\n\");\n\t            var utftext = \"\";\n\t            for (var n = 0; n < string.length; n++) {\n\t                var c = string.charCodeAt(n);\n\t                if (c < 128) {\n\t                    utftext += String.fromCharCode(c);\n\t                }\n\t                else if ((c > 127) && (c < 2048)) {\n\t                    utftext += String.fromCharCode((c >> 6) | 192);\n\t                    utftext += String.fromCharCode((c & 63) | 128);\n\t                }\n\t                else {\n\t                    utftext += String.fromCharCode((c >> 12) | 224);\n\t                    utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n\t                    utftext += String.fromCharCode((c & 63) | 128);\n\t                }\n\t            }\n\t            return utftext;\n\t        }\n\t        ;\n\t        var x = Array();\n\t        var k, AA, BB, CC, DD, a, b, c, d;\n\t        var S11 = 7, S12 = 12, S13 = 17, S14 = 22;\n\t        var S21 = 5, S22 = 9, S23 = 14, S24 = 20;\n\t        var S31 = 4, S32 = 11, S33 = 16, S34 = 23;\n\t        var S41 = 6, S42 = 10, S43 = 15, S44 = 21;\n\t        string = Utf8Encode(string);\n\t        x = ConvertToWordArray(string);\n\t        a = 0x67452301;\n\t        b = 0xEFCDAB89;\n\t        c = 0x98BADCFE;\n\t        d = 0x10325476;\n\t        for (k = 0; k < x.length; k += 16) {\n\t            AA = a;\n\t            BB = b;\n\t            CC = c;\n\t            DD = d;\n\t            a = FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);\n\t            d = FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);\n\t            c = FF(c, d, a, b, x[k + 2], S13, 0x242070DB);\n\t            b = FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);\n\t            a = FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);\n\t            d = FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);\n\t            c = FF(c, d, a, b, x[k + 6], S13, 0xA8304613);\n\t            b = FF(b, c, d, a, x[k + 7], S14, 0xFD469501);\n\t            a = FF(a, b, c, d, x[k + 8], S11, 0x698098D8);\n\t            d = FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);\n\t            c = FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);\n\t            b = FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);\n\t            a = FF(a, b, c, d, x[k + 12], S11, 0x6B901122);\n\t            d = FF(d, a, b, c, x[k + 13], S12, 0xFD987193);\n\t            c = FF(c, d, a, b, x[k + 14], S13, 0xA679438E);\n\t            b = FF(b, c, d, a, x[k + 15], S14, 0x49B40821);\n\t            a = GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);\n\t            d = GG(d, a, b, c, x[k + 6], S22, 0xC040B340);\n\t            c = GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);\n\t            b = GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);\n\t            a = GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);\n\t            d = GG(d, a, b, c, x[k + 10], S22, 0x2441453);\n\t            c = GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);\n\t            b = GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);\n\t            a = GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);\n\t            d = GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);\n\t            c = GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);\n\t            b = GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);\n\t            a = GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);\n\t            d = GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);\n\t            c = GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);\n\t            b = GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);\n\t            a = HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);\n\t            d = HH(d, a, b, c, x[k + 8], S32, 0x8771F681);\n\t            c = HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);\n\t            b = HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);\n\t            a = HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);\n\t            d = HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);\n\t            c = HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);\n\t            b = HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);\n\t            a = HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);\n\t            d = HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);\n\t            c = HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);\n\t            b = HH(b, c, d, a, x[k + 6], S34, 0x4881D05);\n\t            a = HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);\n\t            d = HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);\n\t            c = HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);\n\t            b = HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);\n\t            a = II(a, b, c, d, x[k + 0], S41, 0xF4292244);\n\t            d = II(d, a, b, c, x[k + 7], S42, 0x432AFF97);\n\t            c = II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);\n\t            b = II(b, c, d, a, x[k + 5], S44, 0xFC93A039);\n\t            a = II(a, b, c, d, x[k + 12], S41, 0x655B59C3);\n\t            d = II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);\n\t            c = II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);\n\t            b = II(b, c, d, a, x[k + 1], S44, 0x85845DD1);\n\t            a = II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);\n\t            d = II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);\n\t            c = II(c, d, a, b, x[k + 6], S43, 0xA3014314);\n\t            b = II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);\n\t            a = II(a, b, c, d, x[k + 4], S41, 0xF7537E82);\n\t            d = II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);\n\t            c = II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);\n\t            b = II(b, c, d, a, x[k + 9], S44, 0xEB86D391);\n\t            a = AddUnsigned(a, AA);\n\t            b = AddUnsigned(b, BB);\n\t            c = AddUnsigned(c, CC);\n\t            d = AddUnsigned(d, DD);\n\t        }\n\t        var temp = WordToHex(a) + WordToHex(b) + WordToHex(c) + WordToHex(d);\n\t        return temp.toLowerCase();\n\t    };\n\t    return App;\n\t}());\n\tvar app = new App();\n\tapp.init();\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 862ffd6d8d7c7bac684d\n **/","var App = (function () {\n    function App() {\n        this.name = document.getElementById('name');\n        this.input = document.getElementById('input');\n        this.preview = document.getElementById('preview');\n        this.state = {};\n    }\n    App.prototype.init = function () {\n        this.input.addEventListener('keyup', this.onKeyUp.bind(this, event));\n    };\n    App.prototype.onKeyUp = function (_, event) {\n        var value = event.target.value\n            .toUpperCase()\n            .replace(/#|RGB|\\(|\\)|\\s|;/g, '');\n        if (value.indexOf(',') > 0) {\n            var tmp = value.split(',');\n            if (tmp.length === 3) {\n                this.state.r = tmp[0];\n                this.state.g = tmp[1];\n                this.state.b = tmp[2];\n            }\n        }\n        else if (value.length === 3) {\n            this.state.r = parseInt(value[0] + value[0], 16);\n            this.state.g = parseInt(value[1] + value[1], 16);\n            this.state.b = parseInt(value[2] + value[2], 16);\n        }\n        else if (value.length === 6) {\n            this.state.r = parseInt(value[0] + value[1], 16);\n            this.state.g = parseInt(value[2] + value[3], 16);\n            this.state.b = parseInt(value[4] + value[5], 16);\n        }\n        else {\n            this.preview.style.background = '';\n            this.name.innerHTML = '';\n            return;\n        }\n        this.getName();\n    };\n    App.prototype.getName = function () {\n        var nameOfColor = '', red = +this.state.r, green = +this.state.g, blue = +this.state.b, max = Math.max(red, green, blue), hash = this.MD5('' + red.toString(16) + green.toString(16) + blue.toString(16)).slice(0, 7);\n        hash = hash.replace(/0/g, 'o')\n            .replace(/1/g, 'i')\n            .replace(/2/g, 'n')\n            .replace(/3/g, 'a')\n            .replace(/4/g, 'h')\n            .replace(/5/g, 's')\n            .replace(/6/g, 'y')\n            .replace(/7/g, 'l')\n            .replace(/8/g, 'u')\n            .replace(/9/g, 'g');\n        if (max === red && max === green && max === blue) {\n            if (max === 255) {\n                nameOfColor = 'white';\n            }\n            else if (max === 0) {\n                nameOfColor = 'black';\n            }\n            else {\n                nameOfColor = 'grey';\n            }\n        }\n        else if (max === red && max === green) {\n            nameOfColor = 'yellow';\n        }\n        else if (max === red && max === blue) {\n            nameOfColor = 'magenta';\n        }\n        else if (max === green && max === blue) {\n            nameOfColor = 'cyan';\n        }\n        else if (max === red) {\n            nameOfColor = 'red';\n        }\n        else if (max === green) {\n            nameOfColor = 'green';\n        }\n        else if (max === blue) {\n            nameOfColor = 'blue';\n        }\n        if (!nameOfColor.length)\n            return;\n        this.name.innerHTML = nameOfColor + '_' + hash;\n        this.preview.style.background = 'rgb(' + red + ',' + green + ',' + blue + ')';\n    };\n    App.prototype.MD5 = function (string) {\n        function RotateLeft(lValue, iShiftBits) {\n            return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));\n        }\n        function AddUnsigned(lX, lY) {\n            var lX4, lY4, lX8, lY8, lResult;\n            lX8 = (lX & 0x80000000);\n            lY8 = (lY & 0x80000000);\n            lX4 = (lX & 0x40000000);\n            lY4 = (lY & 0x40000000);\n            lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);\n            if (lX4 & lY4) {\n                return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\n            }\n            if (lX4 | lY4) {\n                if (lResult & 0x40000000) {\n                    return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\n                }\n                else {\n                    return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\n                }\n            }\n            else {\n                return (lResult ^ lX8 ^ lY8);\n            }\n        }\n        function F(x, y, z) { return (x & y) | ((~x) & z); }\n        function G(x, y, z) { return (x & z) | (y & (~z)); }\n        function H(x, y, z) { return (x ^ y ^ z); }\n        function I(x, y, z) { return (y ^ (x | (~z))); }\n        function FF(a, b, c, d, x, s, ac) {\n            a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));\n            return AddUnsigned(RotateLeft(a, s), b);\n        }\n        ;\n        function GG(a, b, c, d, x, s, ac) {\n            a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));\n            return AddUnsigned(RotateLeft(a, s), b);\n        }\n        ;\n        function HH(a, b, c, d, x, s, ac) {\n            a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));\n            return AddUnsigned(RotateLeft(a, s), b);\n        }\n        ;\n        function II(a, b, c, d, x, s, ac) {\n            a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));\n            return AddUnsigned(RotateLeft(a, s), b);\n        }\n        ;\n        function ConvertToWordArray(string) {\n            var lWordCount;\n            var lMessageLength = string.length;\n            var lNumberOfWords_temp1 = lMessageLength + 8;\n            var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - (lNumberOfWords_temp1 % 64)) / 64;\n            var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;\n            var lWordArray = Array(lNumberOfWords - 1);\n            var lBytePosition = 0;\n            var lByteCount = 0;\n            while (lByteCount < lMessageLength) {\n                lWordCount = (lByteCount - (lByteCount % 4)) / 4;\n                lBytePosition = (lByteCount % 4) * 8;\n                lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount) << lBytePosition));\n                lByteCount++;\n            }\n            lWordCount = (lByteCount - (lByteCount % 4)) / 4;\n            lBytePosition = (lByteCount % 4) * 8;\n            lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition);\n            lWordArray[lNumberOfWords - 2] = lMessageLength << 3;\n            lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;\n            return lWordArray;\n        }\n        ;\n        function WordToHex(lValue) {\n            var WordToHexValue = \"\", WordToHexValue_temp = \"\", lByte, lCount;\n            for (lCount = 0; lCount <= 3; lCount++) {\n                lByte = (lValue >>> (lCount * 8)) & 255;\n                WordToHexValue_temp = \"0\" + lByte.toString(16);\n                WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length - 2, 2);\n            }\n            return WordToHexValue;\n        }\n        ;\n        function Utf8Encode(string) {\n            string = string.replace(/\\r\\n/g, \"\\n\");\n            var utftext = \"\";\n            for (var n = 0; n < string.length; n++) {\n                var c = string.charCodeAt(n);\n                if (c < 128) {\n                    utftext += String.fromCharCode(c);\n                }\n                else if ((c > 127) && (c < 2048)) {\n                    utftext += String.fromCharCode((c >> 6) | 192);\n                    utftext += String.fromCharCode((c & 63) | 128);\n                }\n                else {\n                    utftext += String.fromCharCode((c >> 12) | 224);\n                    utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                    utftext += String.fromCharCode((c & 63) | 128);\n                }\n            }\n            return utftext;\n        }\n        ;\n        var x = Array();\n        var k, AA, BB, CC, DD, a, b, c, d;\n        var S11 = 7, S12 = 12, S13 = 17, S14 = 22;\n        var S21 = 5, S22 = 9, S23 = 14, S24 = 20;\n        var S31 = 4, S32 = 11, S33 = 16, S34 = 23;\n        var S41 = 6, S42 = 10, S43 = 15, S44 = 21;\n        string = Utf8Encode(string);\n        x = ConvertToWordArray(string);\n        a = 0x67452301;\n        b = 0xEFCDAB89;\n        c = 0x98BADCFE;\n        d = 0x10325476;\n        for (k = 0; k < x.length; k += 16) {\n            AA = a;\n            BB = b;\n            CC = c;\n            DD = d;\n            a = FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);\n            d = FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);\n            c = FF(c, d, a, b, x[k + 2], S13, 0x242070DB);\n            b = FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);\n            a = FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);\n            d = FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);\n            c = FF(c, d, a, b, x[k + 6], S13, 0xA8304613);\n            b = FF(b, c, d, a, x[k + 7], S14, 0xFD469501);\n            a = FF(a, b, c, d, x[k + 8], S11, 0x698098D8);\n            d = FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);\n            c = FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);\n            b = FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);\n            a = FF(a, b, c, d, x[k + 12], S11, 0x6B901122);\n            d = FF(d, a, b, c, x[k + 13], S12, 0xFD987193);\n            c = FF(c, d, a, b, x[k + 14], S13, 0xA679438E);\n            b = FF(b, c, d, a, x[k + 15], S14, 0x49B40821);\n            a = GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);\n            d = GG(d, a, b, c, x[k + 6], S22, 0xC040B340);\n            c = GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);\n            b = GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);\n            a = GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);\n            d = GG(d, a, b, c, x[k + 10], S22, 0x2441453);\n            c = GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);\n            b = GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);\n            a = GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);\n            d = GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);\n            c = GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);\n            b = GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);\n            a = GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);\n            d = GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);\n            c = GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);\n            b = GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);\n            a = HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);\n            d = HH(d, a, b, c, x[k + 8], S32, 0x8771F681);\n            c = HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);\n            b = HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);\n            a = HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);\n            d = HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);\n            c = HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);\n            b = HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);\n            a = HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);\n            d = HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);\n            c = HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);\n            b = HH(b, c, d, a, x[k + 6], S34, 0x4881D05);\n            a = HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);\n            d = HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);\n            c = HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);\n            b = HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);\n            a = II(a, b, c, d, x[k + 0], S41, 0xF4292244);\n            d = II(d, a, b, c, x[k + 7], S42, 0x432AFF97);\n            c = II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);\n            b = II(b, c, d, a, x[k + 5], S44, 0xFC93A039);\n            a = II(a, b, c, d, x[k + 12], S41, 0x655B59C3);\n            d = II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);\n            c = II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);\n            b = II(b, c, d, a, x[k + 1], S44, 0x85845DD1);\n            a = II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);\n            d = II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);\n            c = II(c, d, a, b, x[k + 6], S43, 0xA3014314);\n            b = II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);\n            a = II(a, b, c, d, x[k + 4], S41, 0xF7537E82);\n            d = II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);\n            c = II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);\n            b = II(b, c, d, a, x[k + 9], S44, 0xEB86D391);\n            a = AddUnsigned(a, AA);\n            b = AddUnsigned(b, BB);\n            c = AddUnsigned(c, CC);\n            d = AddUnsigned(d, DD);\n        }\n        var temp = WordToHex(a) + WordToHex(b) + WordToHex(c) + WordToHex(d);\n        return temp.toLowerCase();\n    };\n    return App;\n}());\nvar app = new App();\napp.init();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/app.ts\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}